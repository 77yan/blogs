(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{430:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"title"},[t._v("温馨提示")]),s("p",[t._v("部分素材来自网络，若不小心影响到您的利益，请联系我们删除。")])]),t._v(" "),s("blockquote",[s("p",[t._v("hook中的useState")])]),t._v(" "),s("p",[t._v("Hook 是一些可以让你在函数组件里”"),s("strong",[t._v("钩入")]),t._v("“React state 及生命周期等特性的函数。")]),t._v(" "),s("blockquote",[s("p",[t._v("useState来自react，需要从react中导入，他是一个hook；")])]),t._v(" "),s("p",[t._v("​\t\t"),s("strong",[t._v("参数")]),t._v("：初始化值，如果不设置为undefined；")]),t._v(" "),s("p",[t._v("​\t\t"),s("strong",[t._v("返回值")]),t._v("：数组，里面有两个元素；")]),t._v(" "),s("p",[t._v("​\t\t\t元素一：当前状态的值（第一次调用为初始化值）")]),t._v(" "),s("p",[t._v("​\t\t\t元素二：改变状态值的函数,触发函数会完成两件事")]),t._v(" "),s("p",[t._v("​\t\t\t\t\t1.调用setCount，设置一个新的值；")]),t._v(" "),s("p",[t._v("​\t\t\t\t\t2.组件重新渲染，根据新的值返回DOM结构")]),t._v(" "),s("p",[t._v("规则：只能在函数最外层调用hook。不要在循环、条件判断或子函数中调用")]),t._v(" "),s("p",[t._v("​\t\t\t只能在react函数组件中调用hook，不要在js函数中调用")]),t._v(" "),s("p",[s("strong",[t._v("jsx=》React.createElement[这个得到的是一个React元素]=》ReactElement{真实DOM}")]),t._v("： jsx的执行过程")]),t._v(" "),s("blockquote",[s("p",[t._v("hook中的useEffect")])]),t._v(" "),s("p",[t._v("Effect可以完成class中生命周期中功能")]),t._v(" "),s("p",[t._v("网络请求、手动更新dom，事情监听，都可以使用Effect来完成")]),t._v(" "),s("p",[t._v("**例：**在class组件中的编写，某些副作用的代码，我们需要在componentWillUnmount中进行清除")]),t._v(" "),s("p",[t._v("​\t\t\t比如：事件总线（eventbus）或Redux中动手调用subscribe\t\t这些都需要在摧毁生命周期函数中取消订阅")]),t._v(" "),s("p",[t._v("useEffect传入的回调函数A本身可以有一个返回值，这个返回值是另外的一个回调函数B。")]),t._v(" "),s("p",[t._v("这个返回值的回调函数是effect可选的清除机制，每一个effect都可以返回一个清除函数")]),t._v(" "),s("p",[s("strong",[t._v("Effect性能优化")])]),t._v(" "),s("p",[t._v("默认情况下，useEffect的回调函数会在每次渲染时都重新执行，会导致两个问题")]),t._v(" "),s("p",[t._v("​\t\t\t1.某些代码我们只希望执行一次即可，类似于componentDidMount和componentWillUnmount中完成的事情，（网络请求，订阅和取消订阅）")]),t._v(" "),s("p",[t._v("​\t\t\t2.多次请求会导致一定的性能问题")]),t._v(" "),s("p",[t._v("我们如何决定useEffect在什么时候应该执行和什么时候不应该执行：useEffect实际上有两个参数")]),t._v(" "),s("p",[t._v("​\t\t\t参数一：执行的回调函数；")]),t._v(" "),s("p",[t._v("​\t\t\t参数二：该useEffect在那些state发生变化时，才重新执行（受谁的影响）")]),t._v(" "),s("p",[t._v("如果你执行只运行一次的effect，一个函数我们不希望依赖任何内容时，也可以传入一个空的数组 [];")]),t._v(" "),s("blockquote",[s("p",[t._v("hook中的useMemo")])]),t._v(" "),s("p",[t._v("把“创建”函数和依赖项数组作为参数传入 "),s("code",[t._v("useMemo")]),t._v("，它仅会在某个依赖项改变时才重新计算 memoized 值。这种优化有助于避免在每次渲染时都进行高开销的计算。")]),t._v(" "),s("p",[t._v("如果没有提供依赖项数组，"),s("code",[t._v("useMemo")]),t._v(" 在每次渲染时都会计算新的值。相当于性能没有改变。")]),t._v(" "),s("p",[t._v("如果提供了一个空数组，useMemo在每次渲染时不会计算新的值，直接拿原来的值。性能提高了但是自己想要的值没有拿到")]),t._v(" "),s("p",[t._v("如果提供了依赖项数组，useMemo在每次渲染都会计算新的值，性能也改变了。")]),t._v(" "),s("blockquote",[s("p",[t._v("hook中的useCallback")])]),t._v(" "),s("p",[t._v("useCallback 是来记住一个回调，但由于内部函数必须经常重新创建，记忆效果不是很好。")]),t._v(" "),s("p",[t._v("useCallback 是一个允许你在多次渲染中缓存函数的 React Hook。")]),t._v(" "),s("p",[t._v("useCallback会返回一个函数的（记忆的）值；")]),t._v(" "),s("p",[t._v("在依赖不变的情况下，多次被定义的时候，返回的值是相同的")]),t._v(" "),s("p",[t._v("参数\t\t\t（一个回调函数和一个数组{数组决定这个函数改不改变}）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("fn"),s("code",[t._v("：想要缓存的函数。此函数可以接受任何参数并且返回任何值。React 将会在初次渲染而非调用时返回该函数。当进行下一次渲染时，如果")]),t._v("dependencies` 相比于上一次渲染时没有改变，那么 React 将会返回相同的函数。否则，React 将返回在最新一次渲染中传入的函数，并且将其缓存以便之后使用。React 不会调用此函数，而是返回此函数。你可以自己决定何时调用以及是否调用。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("dependencies")]),t._v("：有关是否更新 "),s("code",[t._v("fn")]),t._v(" 的所有响应式值的一个列表。响应式值包括 props、state，和所有在你组件内部直接声明的变量和函数。如果你的代码检查工具 "),s("a",{attrs:{href:"https://react.docschina.org/learn/editor-setup#linting",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置了 React"),s("OutboundLink")],1),t._v("，那么它将校验每一个正确指定为依赖的响应式值。依赖列表必须具有确切数量的项，并且必须像 "),s("code",[t._v("[dep1, dep2, dep3]")]),t._v(" 这样编写。React 使用 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/is",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Object.is")]),s("OutboundLink")],1),t._v(" 比较每一个依赖和它的之前的值。")])])]),t._v(" "),s("p",[t._v("useCallback性能优化的点：")]),t._v(" "),s("p",[t._v("1.当需要将一个函数传递给组件时，最好使用useCallback进行优化，将优化之后的函数，传递给子组件")]),t._v(" "),s("p",[t._v("进一步优化：当count发生变化的时，也是用同一个函数")]),t._v(" "),s("p",[t._v("做法一：将count依赖去掉，缺点：闭包缺陷；（函数返回的一直是同一个值）")]),t._v(" "),s("p",[t._v("做法二：useRef，在组件多次被渲染时，返回的是同一个值")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("setCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" countRef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这个hook返回的值不会变")]),t._v("\ncountRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("count\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里每次拿到的都是最新的count")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" increment"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里每次调用都会创建新的函数：例如第一次foo1。第二次foo2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("countRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//没有依赖，所以一次用的是这个函数foo1,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//我们把这个increment这个函数传给一个组件的时候，count的值改变了，这个组件也不会重新渲染")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("increment")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("increment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("hook中的useContext的使用")])]),t._v(" "),s("p",[t._v("在hook中使用Context")]),t._v(" "),s("blockquote",[s("p",[t._v("hook中的useReducer的使用")])]),t._v(" "),s("p",[t._v("useReducer仅仅是useState的一种代替方案：")]),t._v(" "),s("p",[t._v("1.在某种场景下，如果state的处理逻辑比较复杂，我们可以通过useReducer来对其进行拆分；")]),t._v(" "),s("p",[t._v("2.或者这次修改的state需要依赖之前的state时，也可以使用；")]),t._v(" "),s("p",[t._v("使用方法：")]),t._v(" "),s("p",[t._v("第一步：")]),t._v(" "),s("p",[t._v("定义一个reducer()函数")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"increment"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"decremet"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add_number"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("第二步：")]),t._v(" "),s("p",[t._v("导入hook中的useReducer")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useReducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一个参数：前面定一个函数    第二个参数：初始化值")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//例子\tconst [state,dispatch]=useReducer(reducer,{counter:0,friend:[]}) \t")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//像这种state里面不止包含counter，还包含friend，如果要用useState就要定义两次")]),t._v("\n")])])]),s("p",[t._v("第三步：")]),t._v(" "),s("p",[t._v("在组件中使用")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("onclick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"increment"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//这里的dispatch派遣一个action，也就是上面函数中的action，{type:"incremet"}这个就是action')]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("hook中的useRef的使用")])]),t._v(" "),s("p",[t._v("useRef返回一个对象，返回的ref对象在组件的整个生命周期保持不变的。")]),t._v(" "),s("p",[t._v("最常用的ref时两种用法：")]),t._v(" "),s("p",[t._v("用法一：引入D OM元素或组件(但是需要class组件)；")]),t._v(" "),s("p",[t._v("用法二：保存一个数据，这个对象在整个生命周期中可以保存不变的；(useRef()返回的值是一个对象，是不会变的)")]),t._v(" "),s("p",[t._v('在vue和react中不要直接操作dom（document.querySelect(".app")）  //因为你也不知道这个app就一个是你想要的dom')]),t._v(" "),s("p",[t._v("使用方法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("第一步：//导入hook中的useRef()\nconst titleRef=useRef();\n\n第二步：//在元素上添加  ref={titleRef}\n<h2 ref={titleRef}> </h2>\n\n第三步：//使用：dom元素在titleRef.current里面\nconsole.log(titleRef.current)\n")])])]),s("p",[t._v("可以解决闭包陷阱")]),t._v(" "),s("p",[s("img",{attrs:{src:"C:%5CUsers%5C%E7%83%9F%E7%81%AB%E6%B0%94%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230828234453180.png",alt:"image-20230828234453180"}})]),t._v(" "),s("blockquote",[s("p",[t._v("hook中useLayoutEffect的使用")])]),t._v(" "),s("p",[t._v("useLayoutEffect和useEffect的区别：")]),t._v(" "),s("p",[t._v("useEffect会在渲染的内容更新到DOM上后执行useEffect，不会堵塞DOM的更新；")]),t._v(" "),s("p",[t._v("useLayoutEffect会在渲染的内容更新到DOM上之前执行，会堵塞DOM的更新；")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("setCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rendom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("由于这里给他设置为零了")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//上面这些代码的意思：")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为h2中设置了count值会0；但是在useEffect中又改了count的值；")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在页面中我们会先显示count值为0，DOM更新完后，useEffect执行，count值更为Math.rendom()+99")]),t._v("\n   \n   \n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//解决上面的Count值闪烁的问题")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//我们可以使用useLayoutEffect() ，因为它是在DOM更新前执行的")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("自定义hook")])]),t._v(" "),s("p",[t._v("自定义hook本质上只是一种函数代码逻辑的抽取。")])])}),[],!1,null,null,null);s.default=e.exports}}]);